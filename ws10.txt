Script started on 2022-11-15 23:37:57-05:00

> Create tmux
]0;hyeyeon@sjsu:/mnt/scratch/hyeyeon/CS131[hyeyeon@sjsu CS131]$ [K[hyeyeon@sjsu CS131]$ tmux new-session -s homework
[?1049h[22;0;0t[?1h=[H[2J[?12l[?25h[?1000l[?1002l[?1006l[?1005l[c(B[m[?12;25h[?12l[?25h[?1003l[?1006l[?2004l[1;1H[1;41r]112[1;1H[?25l[K
[K
[K
[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:38 15-Nov-22(B[m[1;1H[?12l[?25h(B[m[?12;25h[?12l[?25h[?1003l[?1006l[?2004l[1;1H[1;41r[1;1H[?25l[K
[K
[K
[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:38 15-Nov-22(B[m[1;1H[?12l[?25h[hyeyeon@sjsu CS131]$ tmux attach -t homework
sessions should be nested with care, unset $TMUX to force

1. Put the Python program in the same location as your amazon file on your server (you can use scp or sftp). 
-> I use mobaXterm, so I just drag the file
-> RUN
[hyeyeon@sjsu CS131]$ time python3 numbers.py
min 0 max 15835 avg 9.33467921636312
[?25l[41d[30m[42m[homework]0:python3*                     "sjsu.pub.pic2.ibm.com" 23:38 15-Nov-22(B[m[5;1H[?12l[?25h
real[4C0m19.474s
user[4C0m18.762s
sys[5C0m0.710s


3. Write a bash shell script "numbers.sh" that uses awk to do the exact same thing. 
You may hardcode the amazon input filename in your script, so it doesn't have to be passed as a parameter (same as in the Python script).


[hyeyeon@sjsu CS131]$ [?25l[41;1H[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:38 15-Nov-22(B[m[9;23H[?12l[?25hsed -n "2, \$p" amazon_reviews_us_Books_v1_02.tsv | cut -f99 | sort -n > helpful_votes.txt
-> It skips the header line


[In Shell Script]
StartTime=$(date +%s)   # For checking run time

count=$(wc -l helpful_votes.txt | awk '{print $1}')
max=$(tail -1 helpful_votes.txt)
min=$(head -1 helpful_votes.txt)

sum_of_nums=$(cat helpful_votes.txt | awk '{sum += $1} END {print sum}')
avg=$(($sum_of_nums/$count))

echo "count : $count / max : $max /  min : $min / sum_of_nums : $sum_of_nums /  avg : $avg"

EndTime=$(date +%s)      # For checking run time
echo "Run TIme : $(($EndTime - $StartTime))"   # Checking run time

[?25l[41d[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:39 15-Nov-22(B[m[11;1H[?12l[?25h[hyeyeon@sjsu CS131]$ [?25l[41;1H[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:40 15-Nov-22(B[m[11;23H[?12l[?25hvi numbers.sh
[?25l[H[K
[K
[K
[K
[36mcount[39m=[35m$(wc -l helpful_votes.txt [33m|[35m awk [33m'[31m{print $1}[33m'[35m)[39m[K
[36mmax[39m=[35m$([33mtail[35m [31m-1[35m helpful_votes.txt)[39m[K
[36mmin[39m=[35m$(head [31m-1[35m helpful_votes.txt)[39m[K
[K
[36msum_of_nums[39m=[35m$(cat helpful_votes.txt [33m|[35m awk [33m'[31m{sum += $1} END {print sum}[33m'[35m)[39m[K
[36mavg[39m=[35m$(($sum_of_nums/$count))[39m[K
[K
[33mecho[31m [33m"[31mcount : [35m$count[31m / max : [35m$max[31m /  min : [35m$min[31m / sum_of_nums : [35m$sum_of_nums[31m /   avg : [35m$avg[33m"[39m[K
[K
[36mEndTime[39m=[35m$(date +%s)[39m[K
[33mecho[31m [33m"[31mRun TIme : [35m$(($EndTime[39m - [35m$StartTime))[33m"[39m[K[40;63H13,45[14;45H[40;1H[K[52C^[[14;44H[?25l[40;53H  [14;45H[40;63H13,44[9CAll[14;44H[?12l[?25h[40;53H:[K:wq[?25l"numbers.sh" [New] 13L, 403C written[H[hyeyeon@sjsu CS131]$ tmux attach -t homework                                  [K
sessions should be nested with care, unset $TMUX to force                      [K
[hyeyeon@sjsu CS131]$ time python3 numbers.py                                  [K
min 0 max 15835 avg 9.33467921636312[K
[K
real    0m19.474s[K
user    0m18.762s[K
sys     0m0.710s[K
[hyeyeon@sjsu CS131]$ sed -n "2, \$p" amazon_reviews_us_Books_v1_02.tsv | cut -f9 | sort -n > helpful_votes.txt[K
[hyeyeon@sjsu CS131]$ vi numbers.sh[K
[K
[K
[K[12d[?12l[?25h[hyeyeon@sjsu CS131]$ [?25l[41;1H[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:40 15-Nov-22(B[m[12;23H[?12l[?25h

>> Give permission
chmod 755 numbers.sh

>> RUN
hyeyeon@sjsu CS131]$ ./numbers.sh

>> Result
count : 3105520 / max : 15835 /  min : 0 / sum_of_nums : 28989033 /  avg : 9
Run TIme : 1

>> Save history
[hyeyeon@sjsu CS131]$ history > cmds.log
[hyeyeon@sjsu CS131]$ head[K[K[K[Ktail cmds.[?25l[41;1H[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:41 15-Nov-22(B[m[17;33H[?12l[?25hlog
  995  for i in 'helpful_votes.txt' ; do total=$(($total+$i)); done
  996  for i in "helpful_votes.txt" ; do total=$(($total+$i)); done
  997  for i in helpful_votes.txt ; do total=$(($total+$i)); done
  998  tmux attach -t homework
  999  time python3 numbers.py
 1000  sed -n "2, \$p" amazon_reviews_us_Books_v1_02.tsv | cut -f9 | sort -n > helpful_votes.txt
 1001  vi numbers.sh
 1002  chmod 755 numbers.sh
 1003  ./numbers.sh
 1004  history > cmds.log
[hyeyeon@sjsu CS131]$ (B[m[?12;25h[?12l[?25h[?1003l[?1006l[?2004l[1;1H[1;25r[24;23H[?25l[Hreal    0m19.474s[K
user    0m18.762s[K
sys     0m0.710s[K
[hyeyeon@sjsu CS131]$ sed -n "2, \$p" amazon_reviews_us_Books_v1_02.tsv | cut -f9 | sort -n > helpful_votes.txt[K
[hyeyeon@sjsu CS131]$ vi numbers.sh[K
[hyeyeon@sjsu CS131]$ chmod 755 numbers.sh                                     [K
[hyeyeon@sjsu CS131]$ ./numbers.sh[K
count : 3105520 / max : 15835 /  min : 0 / sum_of_nums : 28989033 /  avg : 9   [K
Run TIme : 1[K
[hyeyeon@sjsu CS131]$ history > cmds.log[K
[hyeyeon@sjsu CS131]$ tail cmds.log[K
  995  for i in 'helpful_votes.txt' ; do total=$(($total+$i)); done            [K
  996  for i in "helpful_votes.txt" ; do total=$(($total+$i)); done            [K
  997  for i in helpful_votes.txt ; do total=$(($total+$i)); done              [K
  998  tmux attach -t homework[K
  999  time python3 numbers.py[K
 1000  sed -n "2, \$p" amazon_reviews_us_Books_v1_02.tsv | cut -f9 | sort -n > helpful_votes.txt[K
 1001  vi numbers.sh[K
 1002  chmod 755 numbers.sh[K
 1003  ./numbers.sh[K
 1004  history > cmds.log[K
[hyeyeon@sjsu CS131]$[K
[30m[42m[homework]0:bash*                        "sjsu.pub.pic2.ibm.com" 23:41 15-Nov-22(B[m[24;23H[?12l[?25h[1;25r(B[m[?1l>[H[2J]112[?12l[?25h[?1000l[?1002l[?1006l[?1005l[?1049l[23;0;0t[exited]
]0;hyeyeon@sjsu:/mnt/scratch/hyeyeon/CS131[hyeyeon@sjsu CS131]$ exit

4. Use time to evaluate the runtimes of both the Python program and your shell script on the same amazon customer reviews input file.
Run Time of Python Program : 19.474s(real), 0.719s(sys)
Run Time of Shell script : 1s

5. Do you think the Python program or the shell script runs faster on your input file? Answer this question in the ws10.txt file.
-> Shell script is more faster than Python program in real time.
But if we consider system time, Python program is more faster than Shell script


Script done on 2022-11-15 23:41:22-05:00
